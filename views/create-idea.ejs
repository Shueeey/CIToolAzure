<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tell us your idea - SSC Continuous Improvement</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            overflow: hidden;
        }

        /* Decorative lightbulbs background */
        .lightbulb-pattern {
            position: absolute;
            width: 100%;
            height: 100%;
            opacity: 0.03;
            pointer-events: none;
        }

        .lightbulb {
            position: absolute;
            font-size: 60px;
            color: #6c757d;
            animation: float 6s ease-in-out infinite;
        }

        .lightbulb:nth-child(odd) {
            animation-delay: -3s;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(5deg); }
        }

        /* Back button */
        .back-button {
            position: absolute;
            top: 30px;
            left: 30px;
            width: 50px;
            height: 50px;
            background: rgba(255, 255, 255, 0.9);
            border: none;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 20px;
            color: #6c757d;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .back-button:hover {
            background: white;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
        }

        /* Main form container */
        .form-container {
            background: white;
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
            width: 90%;
            max-width: 600px;
            position: relative;
            animation: slideUp 0.6s ease-out;
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Header with lightbulb icon */
        .form-header {
            text-align: center;
            margin-bottom: 40px;
        }

        .lightbulb-icon {
            width: 80px;
            height: 80px;
            background: linear-gradient(45deg, #ff6b35 0%, #e64626 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 20px;
            font-size: 35px;
            color: white;
            box-shadow: 0 8px 25px rgba(255, 107, 53, 0.3);
        }

        .form-title {
            font-size: 28px;
            font-weight: 600;
            color: #333;
            margin-bottom: 8px;
        }

        .form-subtitle {
            color: #6c757d;
            font-size: 16px;
        }

        /* Form fields */
        .form-group {
            margin-bottom: 25px;
        }

        .form-label {
            display: block;
            font-size: 16px;
            font-weight: 500;
            color: #333;
            margin-bottom: 8px;
        }

        .form-input {
            width: 100%;
            padding: 15px 20px;
            border: 2px solid #e9ecef;
            border-radius: 12px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: #fafbfc;
        }

        .form-input:focus {
            outline: none;
            border-color: #ff6b35;
            background: white;
            box-shadow: 0 0 0 3px rgba(255, 107, 53, 0.1);
        }

        .form-textarea {
            min-height: 120px;
            resize: vertical;
            font-family: inherit;
        }

        .form-select {
            appearance: none;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 12px center;
            background-repeat: no-repeat;
            background-size: 16px;
            cursor: pointer;
        }

        /* File upload area */
        .file-upload-area {
            border: 2px dashed #e9ecef;
            border-radius: 12px;
            padding: 30px;
            text-align: center;
            background: #fafbfc;
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
        }

        .file-upload-area:hover {
            border-color: #ff6b35;
            background: rgba(255, 107, 53, 0.02);
        }

        .file-upload-area.dragover {
            border-color: #ff6b35;
            background: rgba(255, 107, 53, 0.05);
        }

        .file-upload-icon {
            font-size: 24px;
            color: #6c757d;
            margin-bottom: 10px;
        }

        .file-upload-text {
            color: #6c757d;
            font-size: 14px;
        }

        .file-input {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
        }

        .file-list {
            margin-top: 15px;
            padding: 0;
            list-style: none;
        }

        .file-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px 15px;
            background: #f8f9fa;
            border-radius: 8px;
            margin-bottom: 8px;
        }

        .file-item-info {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .file-remove {
            background: none;
            border: none;
            color: #dc3545;
            cursor: pointer;
            font-size: 16px;
            padding: 5px;
        }

        /* Action buttons */
        .form-actions {
            display: flex;
            gap: 15px;
            justify-content: flex-end;
            margin-top: 30px;
        }

        .btn {
            padding: 15px 30px;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .btn-secondary {
            background: #f8f9fa;
            color: #6c757d;
            border: 2px solid #e9ecef;
        }

        .btn-secondary:hover {
            background: #e9ecef;
            transform: translateY(-1px);
        }

        .btn-primary {
            background: linear-gradient(45deg, #ff6b35 0%, #e64626 100%);
            color: white;
            box-shadow: 0 4px 15px rgba(255, 107, 53, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255, 107, 53, 0.4);
        }

        .btn-primary:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        /* Loading state */
        .loading-spinner {
            width: 20px;
            height: 20px;
            border: 2px solid transparent;
            border-top: 2px solid currentColor;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Success message */
        .success-message {
            display: none;
            text-align: center;
            padding: 20px;
            background: #d4edda;
            color: #155724;
            border-radius: 12px;
            margin-bottom: 20px;
            border: 1px solid #c3e6cb;
        }

        .success-message.show {
            display: block;
            animation: slideDown 0.5s ease-out;
        }

        @keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Error message */
        .error-message {
            display: none;
            text-align: center;
            padding: 20px;
            background: #f8d7da;
            color: #721c24;
            border-radius: 12px;
            margin-bottom: 20px;
            border: 1px solid #f5c6cb;
        }

        .error-message.show {
            display: block;
            animation: slideDown 0.5s ease-out;
        }

        /* Required field indicator */
        .required {
            color: #dc3545;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .form-container {
                padding: 30px 20px;
                margin: 20px;
            }

            .form-actions {
                flex-direction: column;
            }

            .btn {
                justify-content: center;
            }

            .back-button {
                top: 20px;
                left: 20px;
                width: 45px;
                height: 45px;
            }
        }
    </style>
</head>
<body>
<!-- Decorative lightbulbs -->
<div class="lightbulb-pattern" id="lightbulbPattern"></div>

<!-- Back button -->
<button class="back-button" onclick="goBack()">
    <i class="fas fa-arrow-left"></i>
</button>

<!-- Main form container -->
<div class="form-container">
    <!-- Success message -->
    <div class="success-message" id="successMessage">
        <i class="fas fa-check-circle"></i>
        <strong>Success!</strong> Your idea has been submitted successfully.
    </div>

    <!-- Error message -->
    <div class="error-message" id="errorMessage">
        <i class="fas fa-exclamation-triangle"></i>
        <strong>Error!</strong> <span id="errorText">Something went wrong. Please try again.</span>
    </div>

    <!-- Form header -->
    <div class="form-header">
        <div class="lightbulb-icon">
            <i class="fas fa-lightbulb"></i>
        </div>
        <h1 class="form-title">Tell us your idea</h1>
        <p class="form-subtitle">Share your improvement suggestion with the team</p>
    </div>

    <!-- Idea submission form -->
    <form id="ideaForm">
        <!-- Idea name -->
        <div class="form-group">
            <label class="form-label" for="ideaName">
                Name your idea <span class="required">*</span>
            </label>
            <input
                    type="text"
                    id="ideaName"
                    name="ideaName"
                    class="form-input"
                    placeholder="Enter a clear, descriptive title for your idea"
                    required
                    maxlength="200"
            >
        </div>

        <!-- Idea description -->
        <div class="form-group">
            <label class="form-label" for="ideaDescription">
                Describe your idea <span class="required">*</span>
            </label>
            <textarea
                    id="ideaDescription"
                    name="ideaDescription"
                    class="form-input form-textarea"
                    placeholder="Provide details about your improvement idea, including the problem it solves and how it would benefit the organization"
                    required
                    maxlength="2000"
            ></textarea>
        </div>

        <!-- Domain selection -->
        <div class="form-group">
            <label class="form-label" for="ideaDomain">
                Which domain does this belong to? <span class="required">*</span>
            </label>
            <select id="ideaDomain" name="ideaDomain" class="form-input form-select" required>
                <option value="">Select a domain...</option>
                <option value="SSC">SSC (Shared Services Centre)</option>
                <option value="ICT">ICT (Information & Communication Technology)</option>
                <option value="Consulting">Consulting</option>
                <option value="Operations">Operations</option>
                <option value="Finance">Finance</option>
                <option value="HR">Human Resources</option>
                <option value="Legal">Legal</option>
                <option value="Marketing">Marketing</option>
                <option value="General">General</option>
            </select>
        </div>

        <!-- Submitter information -->
        <div class="form-group">
            <label class="form-label" for="submitterName">
                Your name <span class="required">*</span>
            </label>
            <input
                    type="text"
                    id="submitterName"
                    name="submitterName"
                    class="form-input"
                    placeholder="Enter your full name"
                    required
                    maxlength="100"
            >
        </div>

        <!-- File attachment -->
        <div class="form-group">
            <label class="form-label">
                Attach file (optional)
            </label>
            <div class="file-upload-area" id="fileUploadArea">
                <input type="file" id="fileInput" name="attachment" class="file-input" multiple accept=".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.txt,.jpg,.jpeg,.png">
                <div class="file-upload-icon">
                    <i class="fas fa-paperclip"></i>
                </div>
                <div class="file-upload-text">
                    Click to upload files or drag and drop<br>
                    <small>PDF, Word, Excel, PowerPoint, Images (Max 10MB each)</small>
                </div>
            </div>
            <ul class="file-list" id="fileList"></ul>
        </div>

        <!-- Form actions -->
        <div class="form-actions">
            <button type="button" class="btn btn-secondary" onclick="goBack()">
                <i class="fas fa-times"></i>
                Cancel
            </button>
            <button type="submit" class="btn btn-primary" id="submitBtn">
                <i class="fas fa-paper-plane"></i>
                Submit
            </button>
        </div>
    </form>
</div>

<script>
    // Global variables
    let selectedFiles = [];

    // Initialize the page
    document.addEventListener('DOMContentLoaded', function() {
        generateLightbulbPattern();
        initializeFileUpload();
        initializeForm();
    });

    // Generate decorative lightbulb pattern
    function generateLightbulbPattern() {
        const pattern = document.getElementById('lightbulbPattern');
        const lightbulbCount = 20;

        for (let i = 0; i < lightbulbCount; i++) {
            const lightbulb = document.createElement('div');
            lightbulb.className = 'lightbulb';
            lightbulb.innerHTML = '<i class="fas fa-lightbulb"></i>';

            // Random positioning
            lightbulb.style.left = Math.random() * 100 + '%';
            lightbulb.style.top = Math.random() * 100 + '%';
            lightbulb.style.animationDelay = Math.random() * 6 + 's';
            lightbulb.style.animationDuration = (4 + Math.random() * 4) + 's';

            pattern.appendChild(lightbulb);
        }
    }

    // Initialize file upload functionality
    function initializeFileUpload() {
        const fileUploadArea = document.getElementById('fileUploadArea');
        const fileInput = document.getElementById('fileInput');
        const fileList = document.getElementById('fileList');

        // Handle drag and drop
        fileUploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            fileUploadArea.classList.add('dragover');
        });

        fileUploadArea.addEventListener('dragleave', () => {
            fileUploadArea.classList.remove('dragover');
        });

        fileUploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            fileUploadArea.classList.remove('dragover');
            const files = Array.from(e.dataTransfer.files);
            handleFileSelection(files);
        });

        // Handle file input change
        fileInput.addEventListener('change', (e) => {
            const files = Array.from(e.target.files);
            handleFileSelection(files);
        });
    }

    // Handle file selection
    function handleFileSelection(files) {
        files.forEach(file => {
            // Check file size (10MB limit)
            if (file.size > 10 * 1024 * 1024) {
                showError(`File "${file.name}" is too large. Maximum size is 10MB.`);
                return;
            }

            // Check if file already selected
            if (selectedFiles.some(f => f.name === file.name && f.size === file.size)) {
                showError(`File "${file.name}" is already selected.`);
                return;
            }

            selectedFiles.push(file);
        });

        updateFileList();
    }

    // Update file list display
    function updateFileList() {
        const fileList = document.getElementById('fileList');
        fileList.innerHTML = '';

        selectedFiles.forEach((file, index) => {
            const li = document.createElement('li');
            li.className = 'file-item';
            li.innerHTML = `
                    <div class="file-item-info">
                        <i class="fas fa-file"></i>
                        <span>${file.name}</span>
                        <small>(${formatFileSize(file.size)})</small>
                    </div>
                    <button type="button" class="file-remove" onclick="removeFile(${index})">
                        <i class="fas fa-times"></i>
                    </button>
                `;
            fileList.appendChild(li);
        });
    }

    // Remove file from selection
    function removeFile(index) {
        selectedFiles.splice(index, 1);
        updateFileList();
    }

    // Format file size
    function formatFileSize(bytes) {
        if (bytes === 0) return '0 Bytes';
        const k = 1024;
        const sizes = ['Bytes', 'KB', 'MB', 'GB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }

    // Initialize form functionality
    function initializeForm() {
        const form = document.getElementById('ideaForm');

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            await submitIdea();
        });

        // Auto-resize textarea
        const textarea = document.getElementById('ideaDescription');
        textarea.addEventListener('input', function() {
            this.style.height = 'auto';
            this.style.height = this.scrollHeight + 'px';
        });
    }

    // Submit idea to database
    async function submitIdea() {
        const submitBtn = document.getElementById('submitBtn');
        const form = document.getElementById('ideaForm');

        // Validate form
        if (!form.checkValidity()) {
            form.reportValidity();
            return;
        }

        // Show loading state
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<div class="loading-spinner"></div> Submitting...';

        try {
            // Prepare form data
            const formData = new FormData();
            formData.append('title', document.getElementById('ideaName').value.trim());
            formData.append('description', document.getElementById('ideaDescription').value.trim());
            formData.append('domain', document.getElementById('ideaDomain').value);
            formData.append('submittedBy', document.getElementById('submitterName').value.trim());
            formData.append('dateSubmitted', new Date().toISOString());

            // Add files if any
            selectedFiles.forEach((file, index) => {
                formData.append(`attachment_${index}`, file);
            });

            // Submit to API
            const response = await fetch('/api/ideas', {
                method: 'POST',
                body: formData
            });

            const result = await response.json();

            if (response.ok && result.success) {
                showSuccess();
                setTimeout(() => {
                    goBack();
                }, 2000);
            } else {
                throw new Error(result.error || 'Failed to submit idea');
            }

        } catch (error) {
            console.error('Error submitting idea:', error);
            showError(error.message || 'Failed to submit idea. Please try again.');
        } finally {
            // Reset button state
            submitBtn.disabled = false;
            submitBtn.innerHTML = '<i class="fas fa-paper-plane"></i> Submit';
        }
    }

    // Show success message
    function showSuccess() {
        hideMessages();
        const successMessage = document.getElementById('successMessage');
        successMessage.classList.add('show');
        successMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }

    // Show error message
    function showError(message) {
        hideMessages();
        const errorMessage = document.getElementById('errorMessage');
        const errorText = document.getElementById('errorText');
        errorText.textContent = message;
        errorMessage.classList.add('show');
        errorMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }

    // Hide all messages
    function hideMessages() {
        document.getElementById('successMessage').classList.remove('show');
        document.getElementById('errorMessage').classList.remove('show');
    }

    // Go back to previous page
    function goBack() {
        // Check if there's a referrer, otherwise go to dashboard
        if (document.referrer && document.referrer.includes(window.location.origin)) {
            window.history.back();
        } else {
            window.location.href = '/dashboard';
        }
    }

    // Auto-hide messages after 5 seconds
    setInterval(() => {
        const messages = document.querySelectorAll('.success-message.show, .error-message.show');
        messages.forEach(message => {
            if (message.classList.contains('show')) {
                setTimeout(() => {
                    message.classList.remove('show');
                }, 5000);
            }
        });
    }, 5000);
</script>
</body>
</html>